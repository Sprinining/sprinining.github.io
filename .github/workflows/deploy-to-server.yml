name: Build and Deploy Chirpy Blog

on:
  push:
    branches:
      - main # 只监听 main 分支的提交，触发此工作流

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest # 在 GitHub 提供的 Ubuntu 虚拟环境中运行

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        # 拉取仓库代码到 runner 本地

      - name: Setup Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: 3.1
        # 安装指定版本的 Ruby 环境，Jekyll 需要 Ruby 支持

      - name: Install dependencies
        run: |
          gem install bundler
          bundle install
        # 安装 bundler 以及 Gemfile 中声明的所有依赖包（包括 Jekyll 和插件）

      - name: Build Chirpy static site
        run: JEKYLL_ENV=production bundle exec jekyll build
        # 使用 Jekyll 生成生产环境的静态站点，生成的文件在 _site 目录

      - name: Ensure deploy directory exists on server
        uses: appleboy/ssh-action@v0.1.7
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_KEY }}
          script: |
            mkdir -p /home/ubuntu/chirpy-site/_site
            chown -R $USER:$USER /home/ubuntu/chirpy-site
        # 在服务器上确保部署目录存在，并且设置目录权限为当前用户

      - name: Upload _site to server
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_KEY }}
          source: "_site/**"
          target: "/home/ubuntu/chirpy-site/"
        # 上传本地生成的静态文件夹 _site 内所有文件到服务器对应目录

      - name: Upload docker-compose.yml
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_KEY }}
          source: "docker-compose.yml"
          target: "/home/ubuntu/chirpy-site/"
        # 上传 docker-compose 配置文件到服务器，方便管理 Docker 容器

      - name: Upload nginx.conf
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_KEY }}
          source: "nginx.conf"
          target: "/home/ubuntu/chirpy-site/"
        # 上传 nginx 配置文件到服务器，用于 Nginx 容器配置

      - name: Start or Restart blog container
        uses: appleboy/ssh-action@v0.1.7
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_KEY }}
          script: |
            cd /home/ubuntu/chirpy-site
            docker compose down
            docker compose up -d
        # 进入部署目录，先关闭旧的 Docker 容器，再后台启动新的容器，使配置和静态文件生效
